<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAgIAAgAAAAIAAgACAgAAAwMDAAAYABAAMBBgAEAQWABQQGAAQBCgAFAg0ABwQLAAWEzYAKBwsACog
        LAAoIDQAMCQ1ABgUTAAcHFwAJBxIACUjRQAiJVIAKDRYADQpQwA5M0cANTRXACIlYgAgKHQAJDJiADQ5
        ZAAyPHAAMEBUADVBagA3RXIAOFBwAEg8UABFQ1sARURmAENHcwBMUGgAR1J2AFBMYABUUGgAUFh0AFRg
        eABgXGwAZFxwAGVjcABwcHwAKDSAADxEkAA0UIAANFCYAEVVgwBIVJgAUFyIAExghABWY4YAWGiUAExg
        pABcYKAAYFyQAGRogABkcIgAZHSYAHRohAB0dIQAZGioAGB0tAB0bKAAfHioAASIvAAAlMgABqbUAASx
        2QAUrNQAE7bYAAS44AAUuOAAKJzAACigzAAitdgAHMTgACDE4AAoyOQAMsLgADTM5ABYgJQASJy8AGiE
        lABshJgAfISYAHiMmAB0hKAAeIikAHyUpABMwtwAXMDYAEzM5ABcyOQAYMTgAGDM5ABg1OgAbNToAGjc
        7ABw2uwAfNjoAIB4mgCKeJoAiHigAJB8pACEgIgAkpGaAICIpACMgKAAhJCsAIqQqgCInKwAiJy0AJKC
        ogCUjKgAnIioAJKEsACSiLQAnIywAJyYpACYnKgAnJCwAJqSugCAoKwAiKSwAIysuACQoLIAkKC8AJSo
        tACYpLQAmLC4AKCMqACgkKwAoJykAKKUsgCglLwAqJS0AKiUuACqmLoAqKSsAKy0vACysroAjLTAAJis
        wACUusgAmrrKAKycwACkpMAArKzEAKS0yACgvMQApLjIAKq4xACovMwAtKLEALSkyAC0rMgAuKTIALio
        ygC8usAAvLzUAIDS4gCE3OwAkNjkAJjU4ACc2OQAiODsAJri6gCowMwApMTUAKzE0ACsyNQAsMDIALTM
        1AC6wtQAvNTcALTY4AC81OAAquTqAKLo8ACq6vIAvOjsALDo8AC66vAAtPD0ALLx+AC48PQAwrrSAMi8
        1ADCwMQAwMTMAMjIzADAwNAAxMzUAMDM2ADKzNIAysrYAMTS2gDK0NQA0MzQANDM3ADU0NQA0tLaANLY
        2gDa2doA2tngAMTg5ADC5OgAyOToAMDw9ADA9PgAzPD0AMj0+ADQ4OQA1ODoANzk5ADc5OgA1PDwANT0
        +ADY8PAA4OLkAOTi6gDk6uoA6OTkAOzk7ADs6eoA6urwAOTy8gDk9PgA6vT0AOr4+ADw7OwA8PDsAPLy
        8wD0+PQA9Pz4APj09AD49PgA+vr6AICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8ACAgICAgI
        CAgICAgICAgICAgICAgICAgICAgICAgIAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAgI
        CAgICAgICAgICAAAAAAACAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAACAAAAAAAAAgICAgICAgI
        CAgICAgICAgICAgICAgIAAAAADMsJycyAAAICAgICAgICAgICAgICAgIAAAIAAAAMxsTERscJyovXgAA
        AAgICAgICAgICAgIAAAIAAAwGxEQGidCLi4pKigpRYgACAgICAgICAgAAAAAAAAyGxMmJyAcKCkcICMp
        KS44OnYACAAICAgICAAAAAByGxsnKRwoKyM6OiEdHBgdFiApYQAIAAgICAgACABzJhsaExwkOEArODop
        GA4KCgoOHjc9iAAAAAgICAAAcxsaGiAuODo4NhgOFCAKCg8dNDk+Rz9DAAAACAgIAAAxGhooOSk4KQ4K
        DAoMFDQ1Rkl9f3+PbiQAAAAICAAIlBsXICk2KTYkCwoPHjlIfpObk4+Nf3FEHAAAAAgICAAzGyg2ISAp
        JAoKHUaTp6amm5ubjX9xcUQkmAAACAgIAC0cITYgHxcKCCBIfn5+kJCmpqObkXpubilgCAAICAgALSMY
        IBcTCAgWQHelydHW0cSnp6abjXtvIz0ACAgICAAyIB8YCQgLKl2Kt9br6/L29vDFqKObkXoZOwAICAgI
        AIAhHwsIC0KJyufu7u/t7/b39OnJpaaReiMjAAgICAgAcjgfCgs8od/j3cPCvdva4/T09N+yopx1GReI
        CAAICABFRCAiJZXZwsJsaKtoZ6q73e3377OZmnQYGYkIAAgIAIFfYl1DzsHCZVVVVFhRTmWsu/P3tJmX
        mCsciQgACAgAAIuGWl25w2xRTFFRUU1OVGSu5PK0s6KfiXcACAAICAgIALWEidi9bFRLTVFRTUxOY67Z
        8bTOAAAAAAAIAAgIAAAICADP4cO8U0tMUVBRUVirvuzy8ggICAgICAgACAgAAAAICADS1NlbS05QUFFX
        acDu9QgICAgICAgICAgICAAAAAAACADG0ctSWFdXWWu98/MICAgICAgICAgICAgICAgICAgICACpxbqw
        r2284/IAAAgICAgICAgICAgICAgICAgICAgICAAAAAAAAAgICAgICAgICAgICAgICAgICAgICAgICAgI
        CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
        CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICP//
        /////////////////////4P///wA///gAD//gAAf/gAAH/gAAA/wAAAP8AAAD+AAAA/gAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAPgAAAD4AAAA/AAAAf4AAB//gAA//8AA///gAf//8Af////////////////////
        ////////KAAAABgAAAAwAAAAAQAIAAAAAABAAgAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAIAAAIAAAACA
        gACAAAAAgACAAICAAADAwMAAAAAAAAgABAAMBAgAEAQUABAEGAAQCBIAFAwkABQKNAAYFCwAFBA4ABwc
        NAAcHDwAJCA8ACwgMAA0LDwAHBxEABwcWAAcJFwAIBhAACAcSAAoJEwAKCpMACQoWAAoLFAAKjRaADQs
        RAAwLEgAOCxEADQwTAA4MkQAPDRIADQwUgA0MloAMDhcADgwVAA4PFwAKCxoACwwYAAsOGAALDBwADQ0
        YgAwNGgAMjpiADA8aAA8PGQAOjxoADQ4fAAsQFwAOEBUADxAZAA8RGwAMEBwADlCcQA4SHgAQDRIAEI8
        TABEQFQASERcAERAZABESGAAREpsAEhKbABCSHAAREx8AEhMcABAUHwATFJwAFRQYABcVGgAVFh4AFxg
        fABkYGwAYGBwAGhkcABwcHwALESMADxQgABCUoAARFiEAEhQgABQXIQAUFSYAExgjABYaIwAVGSQAFxg
        kABccowATGCgAGBslAB8eIQAenqIAGpqpABsfKAAcHCkAACUzAAIlMQABKzYAAik0gAKstwACLjcABCw
        2AAYsNgAGrjcAAS44AAMuOAAELTgABC44AAYvOAAKLTYACi83AA0rNQAFMDkAHSCnABwiJwAdICgAHqU
        oAB8nKwAQLzYAGi80AB0sMgASNDkAEzQ6ABQzOgAXNToAGjM4ABo2OgAdNDkAHDU6AB81OAAjHycAICA
        kACIhKwAiIS0AJCAoACQhKgAmIikAJiIqACUiLAAmoy4AJSQrACUlLAAlJywAKCMqACgkKwAopKxAKKU
        uACqmbgAoKCoAKikrACgrLwArKqyAKSwvACosLgAtLC4ALi4vACcrMQAkLTAAJi0xACYvMwAsJzEAKCw
        xACotMQArLzQALKiwgCwrMQAuKjIALS0yACwuMQAvLTQAIDa6gCY2OAAlOTwAKzI1AC0xMgAtMjQALzE
        0AC8ytQAvNTcALjY4ACg4OgArOz0ALri6gC66OwAsurxALj0+ADAtNAAwMjMAMrIzADEwtQAwMzUAMTM
        2ADIzNQAysjYAMLQ2ADU0NAA2trcAMjU4ADQ3OAA1NzkANjU5ADI8PQAzPD0AMz0+ADU4OQA0OToANjg
        4ADc4OgA0PDwANTw8ADU8PQA0PT4ANz09ADg4OAA4OToAODo6ADo5OQA6OTsAOjo7ADs7OwA7OzwAOzw
        7ADk8PAA5PT0AOj09ADs8PAA7PTwAOz09ADw8PAA8PD0APTw8AD09PQA8Pj0APT4+AD49PQA+PT4APj4
        9AD4+PgA+Pz4APz4+AD8/PwAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAJCQkJCQkJCQkJ
        CQkJCQkJCQkJCQkJCQAJCQkJCQkJCQkJCQAACQkJCQkJCQkJCQkJCQkJCQkJCQkAAAkJ4svfCQkJCQkJ
        CQkJCQkJCQkJCQkJ36JiS0BAYscJCQkJCQkJCQkJCQAAAJ5RPxUmQUpKSk2VzgkJCQkJCQkAAAkHURYm
        KitKOTA6SkhYeNYJAAkJCQAJw2EmJEhCSDxcPDEcGxsvYKkJAAkJCQCcPyMqKldaVjA8HwwMER5TX2Tu
        AAkJCe5MJCpWR1YUDgwPGC9ZZYySmTzMAAkJ954mKklJVjILETZjjJqampeOlii4AAkJ7lIqVjwzHw0b
        ZZKZp62nmpeJljqpAAkJ4lEwLiASChBdlLDIxMGtraeWk0h6CQkJCYozHg0KOHq1z+Lj//Ljwa2amEhb
        4AkJCZw8GwpDn9PZ0dra2/AJ1qqsmjkyxgkJ34pOHzepvsCxsYeGu9Lq97SmozIrxgAJ4qB7fF66wINz
        d3VxdLG+8LmlpV5FuAAJCeHCfHm9s25pc3FqaX2y6sy2zMzH4QAJAAAJ38XUwHZmcXdxboa+6uHqCQkJ
        CQAJCQAACQnKzn9ncG93gb/q8wkJCQkJCQkJCQkJCQnuyMh+g4GHv+r3CQkJCQkJCQkJCQkJCQkJCc/v
        2drm9wkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJ
        CQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQn///8A////AP/4/wD/wD8A/wAPAPwABwDwAAcA4AADAMAA
        AwCAAAMAgAADAIAAAwDAAAEAwAEBAIAAAQCAAAEAwAABAPAAHwD8AH8A/AD/AP8D/wD///8A////AP//
        /wAoAAAAEAAAACAAAAABAAgAAAAAAAABAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAgAAAgAAAAICAAIAA
        AACAAIAAgIAAAMDAwAAAAAAAEAgYABAMHAAUDCgAGBAsABwUOAAcHDQAHBg4ACQkMAAkKDwAHBhIACAc
        TAAoKFAALDBQACw0XAA0LEQAMCxIADQwTAA4MEwAODRIACw0aAAsOGAAMDRgADw8ZAAwPHgANERwADxE
        dABAPFQAQERsAEREbABISGwATExsAEBAdABASHQAREhwAEhMdABQUGQAWFBkAFxUZABYVHgAWFh8AGBc
        aABwbHgARFCAAERUgABQTIQAXGCAAFxgjABgYIQAYGSQAGRknABkcJQAeHywAASc0AAMsNwAGKjMABCs
        2AAUtNwAGLjcABC44AAUvOAANMzkAGSAlAB4iKAAQLzcAFTE3ABUxOAAYNToAJB8oACMjJgAkIyYAICI
        oACAjKAAiIC0AICYrACEnKgAiJSwAJCEpACUmKgAlKC0AJiouACgkKwApJS8AKiYuACsnLgAoKCoAKSg
        vACwrLQAuLS8AJy0yACcuMgAqLjEALSkyAC4rMgAtLDMALywzAC8vMAAjNzsAJjc7ACU4OwApMTUALzQ
        3ACo6PAAtODoALDo8ADIyMwAwMjUAMDM2ADIzNAAyNDYANDY3ADY1NgAzNzgANTQ4ADA5OgAxOTsAMDo
        7ADA7PAAyOzwAMzw9ADc4OAA3OTkANjk6ADg2OQA5OjsAOjs7ADo8PAA8PTwAPT09ADw+PgA+PT0APj0
        +AD4+PgA+Pz8APz8/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE4xIyxWAAAAAAAAAAAAMRoZJyUrJzsAAAAAAAAyFyUrKzQV
        Dw8gVAAAAAAuGis0FgwTFSg6PDkAAABfGiIiHQs1UVpcWVUvAAAATh4dDgo7XmdnZ1xVOFcAAF0cCxBQ
        doSHjoNnXDhQAABdKxFYf2tran+NbWE2OAAAAFNGfEtEREFKe4JiU1AAAAAAY3xKPUQ+SHuCggAAAAAA
        AAB3bD9ERXCNAAAAAAAAAAAAAHl/cH+OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD//wAA//8AAP4PAAD4BwAA4AMAAMADAACAAwAAgAEAAIABAACAAQAAwAEAAOAHAADwHwAA+D8AAP//
        AAD//wAA
</value>
  </data>
</root>